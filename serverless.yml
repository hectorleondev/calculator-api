service: calculator-api
frameworkVersion: '3'

plugins:
  - serverless-python-requirements

provider:
  name: aws
  runtime: python3.9
  region: us-east-1
  environment:
    USER_TABLE:
      Ref: UserTable
    OPERATION_TABLE:
      Ref: OperationTable
    RECORD_TABLE:
      Ref: RecordTable
    LOGGER_SERVICE_NAME: ${self:service}-logger
    REGION: ${self:provider.region}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:DescribeTable
          Resource: "*"

functions:
  create_user:
    handler: src.handlers.user_handler.create_user_handler
    events:
      - http:
          path: user
          method: post
          cors: true
  login_user:
    handler: src.handlers.user_handler.login_user_handler
    events:
      - http:
          path: login
          method: post
          cors: true
  update_user:
    handler: src.handlers.user_handler.update_user_handler
    events:
      - http:
          path: user/{user_id}
          method: put
          cors: true
          request:
            parameters:
              paths:
                user_id: true
  delete_user:
    handler: src.handlers.user_handler.delete_user_handler
    events:
      - http:
          path: user/{user_id}
          method: delete
          cors: true
          request:
            parameters:
              paths:
                user_id: true
  create_operation:
    handler: src.handlers.operation_handler.create_operation_handler
    events:
      - http:
          path: operation
          method: post
          cors: true
  update_operation:
    handler: src.handlers.operation_handler.update_operation_handler
    events:
      - http:
          path: operation/{operation_id}
          method: put
          cors: true
          request:
            parameters:
              paths:
                operation_id: true
  get_operation_list:
    handler: src.handlers.operation_handler.get_operation_list_handler
    events:
      - http:
          path: operation/list
          method: get
          cors: true
resources:
  Resources:
    UserTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    OperationTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: operation_id
            AttributeType: S
        KeySchema:
          - AttributeName: operation_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    RecordTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: record_id
            AttributeType: S
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: record_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: user_index
            KeySchema:
              - AttributeName: user_id
                KeyType: HASH
            Projection:
              ProjectionType: ALL
